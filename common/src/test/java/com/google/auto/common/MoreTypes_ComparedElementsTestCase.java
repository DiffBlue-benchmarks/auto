package com.google.auto.common;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class MoreTypes_ComparedElementsTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: MoreTypes */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 142 branch to line 158
   */

  @Test
  public void equalsInputZeroOutputFalse()
      throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {

    // Arrange
    Object objectUnderTest =
        Reflector.getInstance("com.google.auto.common.MoreTypes$ComparedElements");
    Reflector.setField(objectUnderTest, "b", null);
    Reflector.setField(objectUnderTest, "aArguments", null);
    Reflector.setField(objectUnderTest, "bArguments", null);
    Reflector.setField(objectUnderTest, "a", null);
    Object o = 0;

    // Act
    Class<?> c = Reflector.forName("com.google.auto.common.MoreTypes$ComparedElements");
    Method m = c.getDeclaredMethod("equals", Reflector.forName("java.lang.Object"));
    m.setAccessible(true);
    boolean retval = (boolean)m.invoke(objectUnderTest, o);

    // Assert result
    Assert.assertEquals(false, retval);
  }
}
